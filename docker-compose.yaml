version: '3.9'
services:
  postgres:
    image: postgres:14
    healthcheck:
      test: ["CMD","psql","-d","postgres://postgres:postgrespassword@postgres:5432/postgres","-c","select 1;"]
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v2.5.0.cli-migrations-v3
    volumes:
      - ./hasura/migrations:/hasura-migrations:rw
      - ./hasura/metadata:/hasura-metadata:rw
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      #maindb url
      MAINDB_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
  graphqurl:
    image: node:17
    user: node
    command: ["npx","--yes","graphqurl@1.0.1","http://127.0.0.1:8080/v1/graphql","-i","-p","3005","-a","0.0.0.0"]
    ports:
      - "127.0.0.1:3005:3005"
volumes:
  db_data:
